services:
  db:
    container_name: postgres
    image: postgres
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 1s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped

  #  reverse-proxy:
  #    image: traefik:latest
  #    container_name: traefik
  #    command:
  #      - "--log.level=DEBUG"
  #      - "--accesslog=true"
  #      - "--api.dashboard=true"
  #      - "--api.insecure=false"
  #      - "--providers.docker=true"
  #      - "--entrypoints.web.address=:80"
  #      #- "--entrypoints.websecure.address=:443"
  #      #- "--certificatesresolvers.myresolver.acme.tlschallenge=true"
  #      #- "--certificatesresolvers.myresolver.acme.email=lafibredudev@gmail.com"
  #      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #    ports:
  #      - "80:80"
  #      - "443:443"
  #    volumes:
  #      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #      - "./letsencrypt:/letsencrypt"
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.http.routers.traefik-dashboard.rule=Host(`dashboard.lafibredudev.com`)"
  #      - "traefik.http.routers.traefik-dashboard.entrypoints=web"
  #      - "traefik.http.routers.traefik-dashboard.tls.certresolver=myresolver"
  #      - "traefik.http.routers.traefik-dashboard.service=api@internal"
  #    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adonis-app
    ports:
      - "3333:3333"
    environment:
      PORT: 3333
      HOST: 0.0.0.0
      NODE_ENV: production
    depends_on:
      - db
    #    labels:
    #      - "traefik.enable=true"
    #      - "traefik.http.routers.app.rule=Host(`app.lafibredudev.com`)"
    #      - "traefik.http.routers.app.entrypoints=websecure"
    #      - "traefik.http.routers.app.tls.certresolver=myresolver"
    #      - "traefik.http.services.app.loadbalancer.server.port=8080"
    restart: unless-stopped

volumes:
  postgres:
